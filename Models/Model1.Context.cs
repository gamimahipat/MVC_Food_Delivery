//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Food_Delivery.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Food_Delivery_DBEntities : DbContext
    {
        public Food_Delivery_DBEntities()
            : base("name=Food_Delivery_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category_Master> Category_Master { get; set; }
        public virtual DbSet<Order_Details_Master> Order_Details_Master { get; set; }
        public virtual DbSet<Order_Master> Order_Master { get; set; }
        public virtual DbSet<Payment_Master> Payment_Master { get; set; }
        public virtual DbSet<Product_Master> Product_Master { get; set; }
        public virtual DbSet<Staff_Details_Master> Staff_Details_Master { get; set; }
        public virtual DbSet<Staff_Manage_Master> Staff_Manage_Master { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Add_To_Cart_Master> Add_To_Cart_Master { get; set; }
        public virtual DbSet<Customer_Master> Customer_Master { get; set; }
    
        public virtual ObjectResult<CustomerListPerticularMonth_Result> CustomerListPerticularMonth(Nullable<int> month, Nullable<int> year, Nullable<int> totalPrice)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("totalPrice", totalPrice) :
                new ObjectParameter("totalPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerListPerticularMonth_Result>("CustomerListPerticularMonth", monthParameter, yearParameter, totalPriceParameter);
        }
    
        public virtual int DeleteCustomerMaster(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomerMaster", customerIDParameter);
        }
    
        public virtual ObjectResult<GetEditProductMaster_Result> GetEditProductMaster(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEditProductMaster_Result>("GetEditProductMaster", productIDParameter);
        }
    
        public virtual int InsertCoockMaster(Nullable<int> userID, string workerName, string workerMobileNo, string workerAddress, string workerEmail, string workerPassword)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var workerNameParameter = workerName != null ?
                new ObjectParameter("WorkerName", workerName) :
                new ObjectParameter("WorkerName", typeof(string));
    
            var workerMobileNoParameter = workerMobileNo != null ?
                new ObjectParameter("WorkerMobileNo", workerMobileNo) :
                new ObjectParameter("WorkerMobileNo", typeof(string));
    
            var workerAddressParameter = workerAddress != null ?
                new ObjectParameter("WorkerAddress", workerAddress) :
                new ObjectParameter("WorkerAddress", typeof(string));
    
            var workerEmailParameter = workerEmail != null ?
                new ObjectParameter("WorkerEmail", workerEmail) :
                new ObjectParameter("WorkerEmail", typeof(string));
    
            var workerPasswordParameter = workerPassword != null ?
                new ObjectParameter("WorkerPassword", workerPassword) :
                new ObjectParameter("WorkerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCoockMaster", userIDParameter, workerNameParameter, workerMobileNoParameter, workerAddressParameter, workerEmailParameter, workerPasswordParameter);
        }
    
        public virtual int InsertCustomerMaster(string customerName, string mobileNumber, string customerAddress, string email, string customerPassword)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var customerPasswordParameter = customerPassword != null ?
                new ObjectParameter("CustomerPassword", customerPassword) :
                new ObjectParameter("CustomerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomerMaster", customerNameParameter, mobileNumberParameter, customerAddressParameter, emailParameter, customerPasswordParameter);
        }
    
        public virtual ObjectResult<ListCoockMaster_Result> ListCoockMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListCoockMaster_Result>("ListCoockMaster");
        }
    
        public virtual ObjectResult<ListCutomerMaster_Result> ListCutomerMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListCutomerMaster_Result>("ListCutomerMaster");
        }
    
        public virtual ObjectResult<ListProductMaster_Result> ListProductMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListProductMaster_Result>("ListProductMaster");
        }
    
        public virtual ObjectResult<ListStaffmanage_Result> ListStaffmanage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListStaffmanage_Result>("ListStaffmanage");
        }
    
        public virtual ObjectResult<Nullable<int>> LoginCustomer(string email, string customerPassword)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var customerPasswordParameter = customerPassword != null ?
                new ObjectParameter("CustomerPassword", customerPassword) :
                new ObjectParameter("CustomerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoginCustomer", emailParameter, customerPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoginStaffMember(string workerEmail, string workerPassword)
        {
            var workerEmailParameter = workerEmail != null ?
                new ObjectParameter("WorkerEmail", workerEmail) :
                new ObjectParameter("WorkerEmail", typeof(string));
    
            var workerPasswordParameter = workerPassword != null ?
                new ObjectParameter("WorkerPassword", workerPassword) :
                new ObjectParameter("WorkerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoginStaffMember", workerEmailParameter, workerPasswordParameter);
        }
    
        public virtual ObjectResult<MaxOrderProduct_Result> MaxOrderProduct(Nullable<int> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MaxOrderProduct_Result>("MaxOrderProduct", monthParameter);
        }
    
        public virtual ObjectResult<MultipleOrderProduct_Result> MultipleOrderProduct(Nullable<int> price, Nullable<int> quntiy)
        {
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var quntiyParameter = quntiy.HasValue ?
                new ObjectParameter("Quntiy", quntiy) :
                new ObjectParameter("Quntiy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MultipleOrderProduct_Result>("MultipleOrderProduct", priceParameter, quntiyParameter);
        }
    
        public virtual int Only1CustomerDetails(Nullable<int> customerID, ObjectParameter eRROR)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Only1CustomerDetails", customerIDParameter, eRROR);
        }
    
        public virtual int SelectInsertUpdateDelete(Nullable<int> customerID, string customerName, string mobileNumber, string customerAddress, string email, string userName, string customerPassword, string statementType)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var customerPasswordParameter = customerPassword != null ?
                new ObjectParameter("CustomerPassword", customerPassword) :
                new ObjectParameter("CustomerPassword", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectInsertUpdateDelete", customerIDParameter, customerNameParameter, mobileNumberParameter, customerAddressParameter, emailParameter, userNameParameter, customerPasswordParameter, statementTypeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateCustomerMaster(Nullable<int> customerID, string customerName, string mobileNumber, string customerAddress, string email, string customerPassword)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var customerPasswordParameter = customerPassword != null ?
                new ObjectParameter("CustomerPassword", customerPassword) :
                new ObjectParameter("CustomerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerMaster", customerIDParameter, customerNameParameter, mobileNumberParameter, customerAddressParameter, emailParameter, customerPasswordParameter);
        }
    
        public virtual ObjectResult<UseFoodName_Result> UseFoodName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UseFoodName_Result>("UseFoodName", nameParameter);
        }
    }
}

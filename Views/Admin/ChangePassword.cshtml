@model MVC_Food_Delivery.Models.Staff_Details_Master
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Adminpage.cshtml";
}



<script>


    $(document).ready(function () {

        var message = "@ViewBag.emassage";

        if (message != "") {
            debugger;

            let timerInterval
            Swal.fire({
                title: message,
               /* html: 'I will close in <b></b> milliseconds.',*/
                timer: 2000,
                timerProgressBar: true,
                didOpen: () => {
                    Swal.showLoading()
                    const b = Swal.getHtmlContainer().querySelector('b')
                    timerInterval = setInterval(() => {
                        b.textContent = Swal.getTimerLeft()
                    }, 100)
                },
                willClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                /* Read more about handling dismissals below */
                if (result.dismiss === Swal.DismissReason.timer) {
                    console.log('I was closed by the timer')
                }
            })

        }


    });

</script>


<section class="content">

    <div class="row">
        <div class="col-12">
            <div class="box">
                <div class="box-header with-border">
                    <h2>Change Password</h2>
                </div>
                <div class="box-body">

                    @*<form action="@Url.Action("Create", "ProductMaster")" method="POST" class="form-element">*@
                    @using (Html.BeginForm("ChangePassword", "Admin", FormMethod.Post,
                    new { enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(model => model.WorkerTypeID)
                   
                        <div class="form-body">
                            <div class="row">

                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label class="control-label col-md-4">Old Password</label>
                                        @*@Html.LabelFor(model => model.WorkerPassword, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.WorkerPassword, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.WorkerPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-8">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ConfirmPassowrd, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ConfirmPassowrd, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="form-actions mt-10">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Update" class="btn btn-outline btn-success" />
                                    <a href="@Url.Action("Index", "Admin")" class="btn btn-outline btn-danger">Back</a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>

</section>




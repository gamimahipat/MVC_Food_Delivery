@model MVC_Food_Delivery.Models.Category_Master

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Adminpage.cshtml";
}


<script>


    $(document).ready(function () {

        var message = "@ViewBag.editmassage";

        if (message != "") {
          
          


            let timerInterval
            Swal.fire({
                title: message,
               /* html: 'I will close in <b></b> milliseconds.',*/
                timer: 2000,
                timerProgressBar: true,
                didOpen: () => {
                    Swal.showLoading()
                    const b = Swal.getHtmlContainer().querySelector('b')
                    timerInterval = setInterval(() => {
                        b.textContent = Swal.getTimerLeft()
                    }, 100)
                },
                willClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                /* Read more about handling dismissals below */
                if (result.dismiss === Swal.DismissReason.timer) {
                    console.log('I was closed by the timer')
                }
            })

        }




   
    });

</script>

<section class="content">

    <div class="row">
        <div class="col-12">
            <div class="box">
                <div class="box-header with-border">
                    <h4 class="box-title">Edit Category</h4>
                </div>
                <div class="box-body">
                    @*@using (Html.BeginForm( new { @class = "form-element" }))
                        {*@
                    @*@Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                    <form action="@Url.Action("Edit", "Category_Master")" method="POST" class="form-element">
                        @Html.HiddenFor(model => model.CategoryID)
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-info">Category Name</label>
                                        @*<input type="text" id="CategoryName" name="CategoryName" class="form-control" placeholder="Category Name">*@
                                        @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions mt-10">
                            <input type="submit" value="Update" class="btn btn-outline btn-success" />
                            @*<button type="submit" class="btn btn-outline btn-success"> <i class="fa fa-check"></i> Create</button>&nbsp;*@
                            <a href="@Url.Action("Index", "Category_Master")" class="btn btn-outline btn-danger">Back To List</a>
                        </div>
                    </form>
                    @*}*@
                </div>
            </div>
        </div>
    </div>

</section>









@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Category_Master</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CategoryID)

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

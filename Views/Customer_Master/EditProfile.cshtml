@model MVC_Food_Delivery.Models.Customer_Master

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}





<script>


    $(document).ready(function () {

        var message = "@ViewBag.emassage";

        if (message != "") {
            debugger;

            let timerInterval
            Swal.fire({
                title: message,
               /* html: 'I will close in <b></b> milliseconds.',*/
                timer: 2000,
                timerProgressBar: true,
                didOpen: () => {
                    Swal.showLoading()
                    const b = Swal.getHtmlContainer().querySelector('b')
                    timerInterval = setInterval(() => {
                        b.textContent = Swal.getTimerLeft()
                    }, 100)
                },
                willClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                /* Read more about handling dismissals below */
                if (result.dismiss === Swal.DismissReason.timer) {
                    console.log('I was closed by the timer')
                }
            })

        }


    });

</script>


<div class="signup-area pt-100 pb-70">
    <h2 class="text-center">EDIT PROFILE</h2>
    <br />  <br />
    <div class="container">
        <div class="row align-items-center">

            <div>
                <div class="signup-item">
                    <form action="@Url.Action("EditProfile", "Customer_Master")" method="POST">
                        <div class="row">
                            @Html.HiddenFor(model => model.CustomerID)
                            @Html.HiddenFor(model => model.ISActive)
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Name:</label>
                                    @*<input type="text" id="CustomerName" name="CustomerName" class="form-control" placeholder="Enter Name">*@
                                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Name" } })
                                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Mobile Number;</label>
                                    @*<input type="text" id="MobileNumber" name="MobileNumber" class="form-control" placeholder="Enter Mobile Number">*@
                                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Mobile Number" } })
                                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Email:</label>
                                    @*<input type="email" id="Email" name="Email" class="form-control" placeholder="Enter Email">*@
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>City:</label>
                                    <input class="form-control" id="City" name="City" value="Ahmedabad" readonly />
                                    @*@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })*@
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Pincode:</label>
                                    <input id="PostalCode" name="PostalCode" value="@Session["pincode"].ToString()" class="form-control" placeholder="Enter Pincode" maxlength="6" />
                                    @*@Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Pincode" } })*@
                                    <span id="pin"></span>
                                    @*@Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
                                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Street:</label>
                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>HouseNumber:</label>
                                    @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
                                    @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <input type="hidden" id="ISActive" name="ISActive" value="1" />


                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Password:</label>
                                    @*<input type="password" id="CustomerPassword" name="CustomerPassword" class="form-control" placeholder="Enter Password">*@
                                    @Html.EditorFor(model => model.CustomerPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
                                    @Html.ValidationMessageFor(model => model.CustomerPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="text-center">
                                <button type="submit" class="sss btn signup-btn">Update</button>
                                <a href="@Url.Action("Index", "ShowProduct")" class="btn signup-btn">Back To Shop</a>
                            </div>
                        </div>
                    </form>
                    @*<span><a href="@Url.Action("Signin", "Login")">Back To Shop</a></span>*@
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {


        $("#PostalCode").keyup(function () {
            //$('#pin').text("");

            var p = $("#PostalCode").val();

            /* if(p.length == 6){*/

            $.getJSON('/Json/pincode.json', function (data) {
                debugger;
                //Pincodes += '<option value="">Select Pincode</option>';
                $.each(data, function (key, city) {
                    if (city.districtName == "Ahmedabad") {

                        if (p == city.pincode) {
                            $('#pin').text(" ");
                            return false;

                        }
                        else {
                            $('#pin').text("Please Valid Pincode");

                        }
                    }
                    else {
                        $('#pin').text("Please Enter Ahmedabad Pincode");

                    }
                    //    Pincodes += '<option value="' + city.pincode + '">' + city.pincode + '</option>';

                });

            });

            /*  }*/
        });

        $(".sss").on('click', function (e) {
            debugger;
            var p = $("#PostalCode").val();
            var pin = $("#pin").text();
            if (p == "") {
                $('#pin').text("Please Enter Pincode");
                /* return false;*/
            }
            else if (pin != "") {
                if (pin == "Please Valid Pincode" || pin == "Please Enter Ahmedabad Pincode") {
                    return false;
                }
            }
            else {
                return true;
            }

        });

    });
</script>



@*<script>
        $(document).ready(function () {
            debugger;
            /**/
            document.getElementById("CustomerAddress").selectedIndex = "@Session["addressid"].ToString()"
        /**/
    });
    </script>*@
